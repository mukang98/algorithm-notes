# %%
# ================================================================= #
#                        2.范数                                     #
# ================================================================= #
import torch
'''
范数(Norm) 是用来衡量张量的大小或长度的数学工具,
在机器学习中,通过限制参数的范数来防止过拟合。L1 和 L2 正则化（对应不同的范数）常用于约束模型的权重。
'''
# %%
#1. L2 范数 (欧几里得范数) 常用于正则化
#公式：||x||_2 = sqrt(x1^2 + x2^2 + ... + xn^2)
x = torch.tensor([3.0, 4.0])
l2_norm = torch.norm(x, p=2)
#%%
#2.L1 范数 适用于特征选择和稀疏模型中。
#公式：||x||_1 = |x1| + |x2| + ... + |xn|
x = torch.tensor([3.0, 4.0])
l1_norm = torch.norm(x, p=1)
#%%
#3. 无穷范数 (Infinity Norm) 通常用于控制最大误差或对极值敏感的场景。
x = torch.tensor([3.0, 4.0]) 
inf_norm = torch.norm(x, p=float('inf')) 
#%%
#4. Frobenius 范数 是矩阵的 L2 范数的推广，适用于高维张量和矩阵。 
# 在矩阵或张量的大小衡量中使用，类似于 L2 范数。
#公式：||A||_F = sqrt(Σ_ij |a_ij|^2)，即矩阵元素平方和的平方根。
matrix = torch.tensor([[1.0, 2.0], [3.0, 4.0]])
frobenius_norm = torch.norm(matrix, p='fro')